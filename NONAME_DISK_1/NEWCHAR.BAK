//Jeff Stein
//6th Period
//Mr. Baker
//Program:
#include <iostream.h>
#include <conio.h>
#include <apstring.h>
#include <iomanip.h>
#include <apvector.h>
#include <stdlib.h>
#include <graphics.h>
#include <dos.h>
#include <fstream.h>
int Grdriver, Grmode, Errorcode;
void Graphic_Setup (int &, int &, int &);
void test ();
apstring tempclass;
int Keypress ();
int midx;
int midy;
int i, z, x;
int Point;
int Key;
int Class;
ofstream out_file;
struct Charinfo
{
apstring Name;
apstring Class;
apvector <bool> Spells;
int classnum;
int HP;
int MP;
int SK;
int EXP;
};

Charinfo Character;

apstring Trash, Na;
void main()
{

Character.Spells.resize(4);
clrscr();

Graphic_Setup( Grdriver, Grmode, Errorcode);
setbkcolor(WHITE);
setcolor(RED);

rectangle (0, 0,300,475);
settextstyle(2,0,6);

outtextxy(20,50,"Character's Name?");
gotoxy(6,6);
getline(cin,Na);


outtextxy(10,100,"Choose your Class...");

outtextxy(30,155,"Warrior");

outtextxy(30,205,"Mage");

outtextxy(30,253,"Rogue");

//Mage= 3 14, 14 14
//Rouge=3 17, 14 17



	Point=11;
	gotoxy(3,11);
	cout<<"<";
	gotoxy(14,11);
	cout<<">";
	do{ Key=Keypress();
			switch(Key)
				{ case 72: gotoxy(3,Point);
									 cout<<" ";
									 gotoxy(14,Point);
									 cout<<" ";
									 Point=Point-3;
									 if (Point<11)
											Point=17;
									 gotoxy(3,Point);
									 cout<<'<';
									 gotoxy(14,Point);
									 cout<<'>';
									 gotoxy(3,Point);
									 break;  // Go UP

					case 80: gotoxy(3,Point);
									 cout<<" ";
									 gotoxy(14,Point);
									 cout<<" ";
									 Point=Point+3;
									 if (Point>17)
											Point=11;
									 gotoxy(3,Point);
									 cout<<'<';
									 gotoxy(14,Point);
									 cout<<'>';
									 gotoxy(3,Point);
									 break;  // Go Down

					case 13: Class=Point;
				}

		}
		while(Key!=13);
switch(Point)
{
case 11 :
Character.classnum=1;
break;
case 14 :
Character.classnum=2;
break;
case 17 :
Character.classnum=3;
break;
};

switch(Character.classnum)
{
case 1 :
Character.Class="Warrior";
Character.classnum=1;
Character.HP=30;
Character.MP=8;
Character.SK=20;
Character.EXP=0;
Character.Name=Na;
Character.Spells[0]=true;
Character.Spells[1]=false;
Character.Spells[2]=false;
Character.Spells[3]=false;
break;

case 2 :
Character.Class="Mage";
Character.classnum=2;
Character.HP=30;
Character.MP=20;
Character.SK=8;
Character.EXP=0;
Character.Name=Na;
Character.Spells[0]=true;
Character.Spells[1]=false;
Character.Spells[2]=true;
Character.Spells[3]=false;
break;

case 3 :
Character.Class="Rogue";
Character.classnum=3;
Character.HP=30;
Character.MP=14;
Character.SK=14;
Character.EXP=0;
Character.Name=Na;
Character.Spells[0]=false;
Character.Spells[1]=true;
Character.Spells[2]=false;
Character.Spells[3]=false;
break;
};

out_file.open(Na.c_str());
out_file<<Character.Name<<endl;
out_file<<Character.Class<<endl;
out_file<<Character.HP<<endl;
out_file<<Character.MP<<endl;
out_file<<Character.SK<<endl;
out_file<<Character.EXP<<endl;
out_file<<Character.Spells[0];
out_file<<Character.Spells[1];
out_file<<Character.Spells[2];
out_file<<Character.Spells[3];
out_file.close();

switch(Point)
{
case 11 :
x=30;
do
{
line(300,0,300,475);
setcolor(WHITE);
outtextxy(x,155,"Warrior");
setcolor(RED);
x++;
outtextxy(x,155,"Warrior");
delay(3);
}while(x<=450);
setcolor(WHITE);
outtextxy(x,155,"Warrior");
x=155;
do
{
setcolor(WHITE);
outtextxy(450,x,"Warrior");
setcolor(RED);
x--;
outtextxy(450,x,"Warrior");
delay(3);
}while(x>=10);
break;

case 14:
x=30;
do
{
line(300,0,300,475);
setcolor(WHITE);
outtextxy(x,205,"Mage");
setcolor(RED);
x++;
outtextxy(x,205,"Mage");
delay(3);
}while(x<=450);
setcolor(WHITE);
outtextxy(x,205,"Mage");
x=205;
do
{
setcolor(WHITE);
outtextxy(450,x,"Mage");
setcolor(RED);
x--;
outtextxy(450,x,"Mage");
delay(3);
}while(x>=10);
break;




case 17:
x=30;
do
{
line(300,0,300,475);
setcolor(WHITE);
outtextxy(x,253,"Rogue");
setcolor(RED);
x++;
outtextxy(x,253,"Rogue");
delay(3);
}while(x<=450);
setcolor(WHITE);
outtextxy(x,253,"Rogue");
x=253;
do
{
setcolor(WHITE);
outtextxy(450,x,"Rogue");
setcolor(RED);
x--;
outtextxy(450,x,"Roguxe");
delay(3);
}while(x>=10);
break;

};

if(Character.Class=="Warrior")
{
outtextxy(450,50,"HP : 30");
outtextxy(445,70,"Mana : 8");
outtextxy(440,90,"Skill : 20");
outtextxy(400,110,"Spell : Lightning Bolt");
};

if(Character.Class=="Mage")
{
outtextxy(450,50,"HP : 30");
outtextxy(445,70,"Mana : 20");
outtextxy(445,90,"Skill : 8");
outtextxy(435,110,"Spell : Ice");
};

if(Character.Class=="Rogue")
{
outtextxy(450,50,"HP : 30");
outtextxy(445,70,"Mana : 14");
outtextxy(440,90,"Skill : 14");
outtextxy(430,110,"Spell : Quake");
};

getch();

};



void Graphic_Setup (int & Grdriver,int & Grmode,int & Errorcode)
	{
		Grdriver = VGA;
		Grmode = VGAHI;
		initgraph(&Grdriver, &Grmode, "C:\\TC\\BGI");
		Errorcode = graphresult();

		if (Errorcode !=grOk)
			{
				clrscr();
				cout<<"Graphic Error"<<endl;
				getch();
				exit(1);
			}
	}
int Keypress ()
{
while (!kbhit());
return getch();
}



